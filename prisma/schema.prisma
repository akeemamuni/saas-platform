// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String
// }

enum RoleType {
  ADMIN
  MANAGER
  MEMBER
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  INCOMPLETE
  TRIALING
  EXPIRED
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  hashedToken String?
  name        String
  tenant      Tenant   @relation(fields: [tenantId], references: [id])
  tenantId    String
  role        Role     @relation(fields: [roleId], references: [id])
  roleId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tenant {
  id           String        @id @default(uuid())
  name         String
  users        User[]
  subscription Subscription?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Role {
  id        String   @id @default(uuid())
  name      RoleType @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Plan {
  id              String         @id @default(uuid())
  name            String
  priceInCents    Int
  maxUsers        Int
  stripeProductId String
  subscriptions   Subscription[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Subscription {
  id          String             @id @default(uuid())
  tenant      Tenant             @relation(fields: [tenantId], references: [id])
  tenantId    String             @unique
  plan        Plan               @relation(fields: [planId], references: [id])
  planId      String
  status      SubscriptionStatus
  stripeSubId String             @unique
  startDate   DateTime
  endDate     DateTime?
  trialEndsAt DateTime?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}
